---
- name: Set fact root_path 
  set_fact: 
    root_path: '{{ playbook_dir }}/..' 

- name: Get version from checkout if not provided
  shell: echo -e "from galaxy import __version__\nprint(__version__)\n" | /usr/bin/env python
  args: 
    chdir: '{{ root_path }}'
  register: version_command  
  delegate_to: localhost
  when: galaxy_version is not defined

- name: Set global version if not provided
  set_fact:
    galaxy_version: "{{ version_command.stdout }}"
  when: galaxy_version is not defined

- name: Show galaxy version 
  debug: var=galaxy_version

- name: Build galaxy-build image
  docker_image:
    buildargs:
      http_proxy: "{{ http_proxy | default('') }}"
      https_proxy: "{{ https_proxy | default('') }}"
      no_proxy: "{{ no_proxy | default('') }}"
    name: galaxy-build
    tag: latest
    path: '{{ root_path }}'
    dockerfile: scripts/docker-release/Dockerfile.build
  delegate_to: localhost

- name: Run galaxy-build container 
  docker_container:
    image: galaxy-build
    name: galaxy-build
    volumes: 
      - '{{ root_path }}:/galaxy:rw'
  delegate_to: localhost

- name: Build the galaxy image
  docker_image: 
    buildargs:
      http_proxy: "{{ http_proxy | default('') }}"
      https_proxy: "{{ https_proxy | default('') }}"
      no_proxy: "{{ no_proxy | default('') }}"
    name: galaxy
    tag: '{{ galaxy_version }}' 
    path: '{{ root_path }}'
    dockerfile: scripts/docker-release/Dockerfile
  delegate_to: localhost

