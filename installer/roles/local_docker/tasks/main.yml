---
- name: Manage AWX Container Images
  block:
    - name: Export Docker web image if it isnt local and there isnt a registry defined
      docker_image:
        name: "{{ galaxy_image }}"
        tag: "{{ galaxy_version }}"
        archive_path: "{{ galaxy_local_base_config_path | default('/tmp') }}/{{ galaxy_image }}_{{ galaxy_version }}.tar"
      when: inventory_hostname != "localhost" and docker_registry is not defined
      delegate_to: localhost

    - name: Authenticate with Docker registry if registry password given
      docker_login:
        registry: "{{ docker_registry }}"
        username: "{{ docker_registry_username }}"
        password: "{{ docker_registry_password }}"
        reauthorize: yes
      when: docker_registry is defined and docker_registry_password is defined
      delegate_to: localhost

    - name: Set docker base path
      set_fact:
        docker_deploy_base_path: "{{ galaxy_base_path | default('/tmp') }}/docker_deploy"
      when: ansible_connection != "local" and docker_registry is not defined

    - name: Ensure directory exists
      file:
        path: "{{ docker_deploy_base_path }}"
        state: directory
      when: ansible_connection != "local" and docker_registry is not defined

    - name: Copy image to docker execution
      copy:
        src: "{{ galaxy_local_base_config_path | default('/tmp') }}/{{ galaxy_image }}_{{ galaxy_version }}.tar"
        dest: "{{ docker_deploy_base_path }}/{{ galaxy_image }}_{{ galaxy_version }}.tar"
      when: ansible_connection != "local" and docker_registry is not defined

    - name: Load image
      docker_image:
        name: "{{ galaxy_image }}"
        tag: "{{ galaxy_version }}"
        load_path: "{{ docker_deploy_base_path }}/{{ galaxy_image }}_{{ galaxy_version }}.tar"
        timeout: 300
      when: ansible_connection != "local" and docker_registry is not defined

    - include_tasks: image_push.yml
      when: docker_registry is defined and dockerhub_base is not defined

    - name: Set full image path for local install
      set_fact:
        galaxy_actual_image: "{{ galaxy_image }}:{{ galaxy_version }}"
      when: docker_registry is not defined
  when: dockerhub_base is not defined

- name: Set DockerHub Image Paths
  set_fact:
    galaxy_actual_image: "{{ dockerhub_base }}/galaxy:{{ dockerhub_version }}"
  when: dockerhub_base is defined

- name: Create a temp directory 
  tempfile:
    state: directory
    prefix: galaxy
  register: tempdir

- name: Template compose file
  template:
    src: compose.yml.j2
    dest: '{{ tempdir.path }}/docker-compose.yml'

- name: Launch Galaxy
  docker_service:
    state: present
    project_name: galaxy
    project_src: '{{ tempdir.path }}' 
  register: startup

